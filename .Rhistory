#df_bank$pdays
#df_bank$previous
df_bank$poutcome = as.factor(df_bank$poutcome )
df_bank$euribor3m  = as.factor(df_bank$euribor3m)#???
df_bank$y = as.factor(df_bank$y)
# drop duration
df_bank %>%
select(-duration)
# drop duration
df_back <-
df_bank %>%
select(-duration)
# str(df_bank)
df_back <-
df_bank %>%
select(-duration)
df_bank$job = as.factor(df_bank$job )
df_bank$marital = as.factor(df_bank$marital )
df_bank$education = as.factor(df_bank$education )
df_bank$default = as.factor(df_bank$default )
df_bank$housing = as.factor(df_bank$housing )
df_bank$loan = as.factor(df_bank$loan )
df_bank$contact = as.factor(df_bank$contact )
df_bank$month = as.factor(df_bank$month )
df_bank$day_of_week = as.factor(df_bank$day_of_week )
df_bank$poutcome = as.factor(df_bank$poutcome )
df_bank$euribor3m  = as.factor(df_bank$euribor3m)#???
df_bank$y = as.factor(df_bank$y)
View(df_back)
df_bank = read_csv2('./data/bank-additional.csv')
# str(df_bank)
df_bank <-
df_bank %>%
select(-duration)
# remove NAs?
# contact, pdays, poutcome
unique(df_bank$contact)
unique(pdays)
unique(df_bank$pdays)
unique(df_bank$poutcome)
df_bank$pdays[df_bank$pdays == 999] <- NA
df_bank[is.na(df_bank == T)]
range(df_bank$pdasy)
range(df_bank$pdays)
range(na.omit(df_bank$pdays))
unique(df_bank$pdays) ### replace 999 with NAS
unique(df_bank$moth)
unique(df_bank$month)
---
title: "311 Calls"
df_bank = read_csv2('./data/bank-additional.csv')
# str(df_bank)
df_bank <-
df_bank %>%
select(-duration)
# str(df_bank)
df_bank <-
df_bank %>%
select(
-default,
-duration
)
# str(df_bank)
df_bank <-
df_bank %>%
select(
-default,
-duration
)
# str(df_bank)
df_bank <-
df_bank %>%
select(
c(-default,
-duration)
)
# str(df_bank)
df_bank <-
df_bank %>%
select(
c(-default,
-duration)
)
df_bank <-
df_bank %>%
select(
-c(default,
duration)
)
df_bank <-
df_bank %>%
dplyr::select(
-c(default,
duration)
)
# str(df_bank)
_bank <- df_bank %>%
df_bank <- df_bank %>%
dplyr::select(
-c(default, duration)
)
df_bank = read_csv2('./data/bank-additional.csv')
# str(df_bank)
df_bank <- df_bank %>%
dplyr::select(
-c(default, duration)
)
# str(df_bank)
df_bank <- df_bank %>%
dplyr::select(
-c(default, duration)
)
df_bank ->
df_bank %>%
mutate(
pdays_cat <-
case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
df_bank = read_csv2('./data/bank-additional.csv')
# str(df_bank)
df_bank <- df_bank %>%
dplyr::select(
-c(default, duration)
)
df_bank ->
df_bank %>%
mutate(
pdays_cat <-
case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
df_bank ->
df_bank %>%
mutate(
pdays_cat =
case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ NA_real_
)
)
df_bank <- df_bank %>%
mutate(
pdays_cat = case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ NA_character_  # Using NA_character_ as the column is categorical
)
)
library(caret)
splitIndex <- createDataPartition(df_bank$y, p=.8,list=F)
df_train <- df_bank[splitIndex,]
df_train <- df_bank[-splitIndex,]
m1 = glm(y ~ ., df_train, family = 'binomial')
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", "default", "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m", "y")
# Loop through each column and convert to factor
for (col in columns_to_factorize) {
df_bank[[col]] <- as.factor(df_bank[[col]])
}
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", , "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m", "y")
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m", "y")
# Loop through each column and convert to factor
for (col in columns_to_factorize) {
df_bank[[col]] <- as.factor(df_bank[[col]])
}
df_bank <- df_bank %>%
mutate(
pdays_cat = case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ NA_character_  # Using NA_character_ as the column is categorical
)
)
m1 = glm(y ~ ., df_train, family = 'binomial')
df_bank <- df_bank %>%
mutate(
y_binary = case_when(
tolower(y) == 'yes' ~ 1,
tolower(y) == 'no' ~ 0
TRUE ~ NA_integer_
df_bank <- df_bank %>%
mutate(
y_binary = case_when(
tolower(y) == 'yes' ~ 1,
tolower(y) == 'no' ~ 0,
TRUE ~ NA_integer_
)
)
m1 = glm(y ~ ., df_train, family = 'binomial')
m1 = glm(y_binary ~ ., df_train, family = 'binomial')
m1 = glm(y_binary ~ ., df_train, family = 'binomial')
df_bank = read_csv2('./data/bank-additional.csv')
# GET RID OF THESE COLUMNS
df_bank <- df_bank %>%
dplyr::select(
-c(default, duration)
)
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m")
# Loop through each column and convert to factor
for (col in columns_to_factorize) {
df_bank[[col]] <- as.factor(df_bank[[col]])
}
df_bank <- df_bank %>%
mutate(
pdays_cat = case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ 'MONKEY BRAINS'  # Using NA_character_ as the column is categorical
)
)
df_bank <- df_bank %>%
mutate(
y_binary = case_when(
tolower(y) == 'yes' ~ 1,
tolower(y) == 'no' ~ 0,
TRUE ~ NA_integer_
)
)
m1 = glm(y_binary ~ ., df_train, family = 'binomial')
m1 = glm(y_binary ~ ., df_bank, family = 'binomial')
m1 = glm(y_binary ~ ., df_bank, family = 'binomial')
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(suppressMessages({
library(tidyverse)
library(car)
library(broom)
library(DescTools)
library(ROCR)
library(lmtest)
library(dplyr)
library(caret)
}))
df_bank = read_csv2('./data/bank-additional.csv')
# GET RID OF THESE COLUMNS
df_bank <- df_bank %>%
dplyr::select(
-c(default, duration)
)
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m")
# Loop through each column and convert to factor
for (col in columns_to_factorize) {
df_bank[[col]] <- as.factor(df_bank[[col]])
}
# remove NAs?
# contact, pdays, poutcome
df_bank <- df_bank %>%
mutate(
pdays_cat = case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ 'MONKEY BRAINS'  # Using NA_character_ as the column is categorical
)
)
df_bank <- df_bank %>%
mutate(
y_binary = case_when(
tolower(y) == 'yes' ~ 1,
tolower(y) == 'no' ~ 0,
TRUE ~ NA_integer_
)
)
# train test split
set.seed(42)
splitIndex <- createDataPartition(df_bank$y, p=.8,list=F)
df_train <- df_bank[splitIndex,]
df_train <- df_bank[-splitIndex,]
m1 = glm(y_binary ~ ., df_train, family = 'binomial')
m1 = glm(y_binary ~ ., df_train, family = 'binomial')
summary(m1)
vif(m1)
df_bank <- df_bank %>%
dplyr::select(
-c(y)
)
# train test split
set.seed(42)
splitIndex <- createDataPartition(df_bank$y, p=.8,list=F)
df_train <- df_bank[splitIndex,]
splitIndex <- createDataPartition(df_bank$y, p=.8,list=F)
splitIndex <- createDataPartition(df_bank$y_binary, p=.8,list=F)
df_train <- df_bank[splitIndex,]
df_train <- df_bank[-splitIndex,]
m1 = glm(y_binary ~ ., df_train, family = 'binomial')
summary(m1)
vif(m1)
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m")
# Loop through each column and convert to factor
for (col in columns_to_factorize) {
df_bank[[col]] <- as.factor(df_bank[[col]])
}
df_bank <- df_bank %>%
mutate(
pdays_cat = case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ 'MONKEY BRAINS'  # Using NA_character_ as the column is categorical
)
)
df_bank <- df_bank %>%
mutate(
y_binary = case_when(
tolower(y) == 'yes' ~ 1,
tolower(y) == 'no' ~ 0,
TRUE ~ NA_integer_
)
)
df_bank = read_csv2('./data/bank-additional.csv')
df_bank = read_csv2('./data/bank-additional.csv')
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m")
# Loop through each column and convert to factor
for (col in columns_to_factorize) {
df_bank[[col]] <- as.factor(df_bank[[col]])
}
df_bank <- df_bank %>%
mutate(
pdays_cat = case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ 'MONKEY BRAINS'  # Using NA_character_ as the column is categorical
)
)
df_bank <- df_bank %>%
mutate(
y_binary = case_when(
tolower(y) == 'yes' ~ 1,
tolower(y) == 'no' ~ 0,
TRUE ~ NA_integer_
)
)
# GET RID OF THESE COLUMNS
df_bank <- df_bank %>%
dplyr::select(
-c(y, default, duration, pdays)
)
# train test split
set.seed(42)
splitIndex <- createDataPartition(df_bank$y_binary, p=.8,list=F)
df_train <- df_bank[splitIndex,]
df_train <- df_bank[-splitIndex,]
m1 = glm(y_binary ~ ., df_train, family = 'binomial')
summary(m1)
vif(m1)
```{r}
df_bank = read_csv2('./data/bank-additional.csv')
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m")
# Loop through each column and convert to factor
for (col in columns_to_factorize) {
df_bank[[col]] <- as.factor(df_bank[[col]])
}
df_bank <- df_bank %>%
mutate(
pdays_cat = case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ 'MONKEY BRAINS'  # Using NA_character_ as the column is categorical
)
)
df_bank <- df_bank %>%
mutate(
y_binary = case_when(
tolower(y) == 'yes' ~ 1,
tolower(y) == 'no' ~ 0,
TRUE ~ NA_integer_
)
)
# GET RID OF THESE COLUMNS
df_bank <- df_bank %>%
dplyr::select(
-c(y, default, duration, pdays)
)
# REMOVE NAs
df_bank <-df_bank %>%
na.omit(df_bank)
# train test split
set.seed(42)
splitIndex <- createDataPartition(df_bank$y_binary, p=.8,list=F)
df_train <- df_bank[splitIndex,]
df_train <- df_bank[-splitIndex,]
m1 = glm(y_binary ~ ., df_train, family = 'binomial')
summary(m1)
vif(m1)
range(na.omit(df_bank$pdays))
vif(m1)
df_bank = read_csv2('./data/bank-additional.csv')
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m")
# Loop through each column and convert to factor
for (col in columns_to_factorize) {
df_bank[[col]] <- as.factor(df_bank[[col]])
}
df_bank <- df_bank %>%
mutate(
pdays_cat = case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ 'MONKEY BRAINS'  # Using NA_character_ as the column is categorical
)
)
df_bank <- df_bank %>%
mutate(
y_binary = case_when(
tolower(y) == 'yes' ~ 1,
tolower(y) == 'no' ~ 0,
TRUE ~ NA_integer_
)
)
# GET RID OF THESE COLUMNS
df_bank <- df_bank %>%
dplyr::select(
-c(y, default, duration, pdays)
)
# REMOVE NAs
df_bank <-df_bank %>%
na.omit(df_bank)
# REMOVE NAs
df_bank <-df_bank %>%
na.omit(df_bank)
df_bank = read_csv2('./data/bank-additional.csv')
df_bank = read_csv2('./data/bank-additional.csv')
# List of columns to convert to factors
columns_to_factorize <- c("job", "marital", "education", "housing",
"loan", "contact", "month", "day_of_week", "poutcome",
"euribor3m")
# Loop through each column and convert to factor
for (col in columns_to_factorize) {
df_bank[[col]] <- as.factor(df_bank[[col]])
}
df_bank <- df_bank %>%
mutate(
pdays_cat = case_when(
pdays == 999 ~ 'NEVER CALLED OR ONLY CALLED ONCE',
pdays >= 1 & pdays <= 7 ~ '0-1 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 8 & pdays <= 14 ~ '1-2 WEEKS BETWEEN LAST 2 CALLS',
pdays >= 15 & pdays <= 21 ~ '2-3 WEEK BETWEEN LAST 2 CALLS',
TRUE ~ 'MONKEY BRAINS'  # Using NA_character_ as the column is categorical
)
)
df_bank <- df_bank %>%
mutate(
y_binary = case_when(
tolower(y) == 'yes' ~ 1,
tolower(y) == 'no' ~ 0,
TRUE ~ NA_integer_
)
)
# GET RID OF THESE COLUMNS
df_bank <- df_bank %>%
dplyr::select(
-c(y, default, duration, pdays)
)
# REMOVE NAs
df_bank <-df_bank %>%
na.omit(df_bank)
# REMOVE NAs
df_bank <-df_bank %>%
na.omit(df_bank)
# train test split
set.seed(42)
splitIndex <- createDataPartition(df_bank$y_binary, p=.8,list=F)
df_train <- df_bank[splitIndex,]
df_train <- df_bank[-splitIndex,]
m1 = glm(y_binary ~ ., df_train, family = 'binomial')
summary(m1)
cols(df_bank)
colnames(df_bank)
